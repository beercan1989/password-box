<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.jbacon.passwordstorage.mybatis.mappers.DatabaseMapper">

	<!-- Master Password Mappings -->
<!-- 	<delete id="deleteMasterPassword" parameterType="MasterPassword"></delete>	 -->
<!-- 	<select id="getMasterPassword" resultType="MasterPassword" parameterType="java.lang.String"></select> -->
<!-- 	<select id="getMasterPasswordNames" resultType="java.lang.String"></select> -->
<!-- 	<select id="getMasterPasswords" resultType="MasterPassword"></select> -->
<!-- 	<insert id="instertMasterPassword" parameterType="MasterPassword"></insert> -->
<!-- 	<update id="updateMasterPassword" parameterType="MasterPassword"></update> -->
	
	<!-- Stored Password Mappings -->
<!-- 	<select id="getAllStoredPasswords"> -->
<!-- 	</select> -->
	
<!-- 	<select id="getEveryStoredPassword"> -->
<!-- 	</select> -->

<!-- 	<update id="updateSingleStoredPassword"> -->
<!-- 	</update> -->

<!-- 	<insert id="instertSingleStoredPassword"> -->
<!-- 	</insert> -->

<!-- 	<delete id="deleteSingleStoredPassword"> -->
<!-- 	</delete> -->
	
	
	<!-- Database Configuration Mappings -->
	<!-- Create DB tables. -->
	<update id="createStoredPasswordTable">
		CREATE TABLE IF NOT EXISTS StoredPasswords (id INTEGER PRIMARY KEY ASC AUTOINCREMENT NOT NULL UNIQUE ON CONFLICT FAIL, profileName TEXT NOT NULL, passwordName TEXT NOT NULL, password TEXT NOT NULL, passwordNotes TEXT NOT NULL);
	</update>
	<update id="createMasterPasswordTable">
		CREATE TABLE IF NOT EXISTS MasterPasswords (id INTEGER PRIMARY KEY ASC AUTOINCREMENT NOT NULL UNIQUE ON CONFLICT FAIL, profileName TEXT NOT NULL UNIQUE ON CONFLICT FAIL, secretKey TEXT NOT NULL, salt TEXT NOT NULL);
	</update>
	
	<!-- Drop DB tables. -->
	<update id="dropStoredPasswordTable">
		DROP TABLE IF EXISTS StoredPasswords;
	</update>
	<update id="dropMasterPasswordTable">
		DROP TABLE IF EXISTS MasterPasswords;
	</update>
	
	
	<!-- Result Mappings -->
	<resultMap id="MasterPassword" type="com.jbacon.passwordstorage.backend.encryption.objects.MasterPassword">
		<result column="profileName" property="profileName" />
		<result column="secretKey" property="encryptedSecretKey" />
		<result column="salt" property="salt" />
	</resultMap>
	
	<resultMap id="StoredPassword" type="com.jbacon.passwordstorage.backend.encryption.objects.StoredPassword">
		<result column="profileName" property="profileName"/>
		<result column="passwordName" property="encryptedPasswordName"/>
		<result column="password" property="encryptedPassword"/>
		<result column="passwordNotes" property="encryptedPasswordNotes"/>
	</resultMap>

</mapper>